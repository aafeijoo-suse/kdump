//{{{ Copyright (c) 2008, SUSE LINUX Products GmbH
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// Neither the name of the Novell nor the names of its contributors may be used
// to endorse or promote products derived from this software without specific
// prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ONANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//}}}

kdumptool(8)
============
:man version: @PACKAGE_VERSION@
:man source: kdump
:man manual: User Manuals
Bernhard Walle <bwalle@suse.de>

NAME
----
kdumptool - Binary to support kdump saving and loading

SYNOPSIS
--------
*kdumptool* [_globals_] _command_ [_options_] [_arguments_]

DESCRIPTION
-----------
*kdumptool* provides various subcommands to support following actions for kdump.
It can:

- help to identify a kernel (whether it's relocatable or not, whether it's ELF
  or x86-style independent of the file name),
- save a dump over various transports (local file, SSH2, FTP, NFS, SMB),
- copy the kernel including debugging information from one directory to the
  dump directory over the same transports as the dump itself,
- delete old dumps,
- read the VMCOREINFO (see *makedumpfile*(8) of kernel core dumps),
- show the progress over the keyboard LED.

Because most functionality is needed in the _initrd_, the design decision was to
provide that functionality in one binary without huge dependencies and without
a scripting language.

USAGE
-----

To select which functionality is needed, one has to provide a _command_. So, for
example +kdump save_dump+ and +kdump copy_kernel+ is used to copy the kernel.
There are *global options* which are valid for all (sub)commands and there are
*normal options* which are only valid for a specific command. Also, the command
can take an arbitrary number of *arguments*.

Additional to the command line options described in that manual page, the
behavior is influenced by configuration options in _/etc/sysconfig/kdump_ (or a
different configuration file specified with the *-F* (*--configfile*) option.
Please read *kdump(5)* for documentation about the configuration options.

GLOBAL OPTIONS
--------------

All option parsing is done via the *getopt_long(5)* function, and therefore
follows all standard command line parsing rules.

*-h* | *--help*::
  Shows help output and exits.

*-v* | *--version*::
  Shows version information and exits.

*-b* | *--background*::
  Run in daemon mode. This option is useful for the *led_blink*
  subcommand.

*-D* | *--debug*::
  Prints debugging information (to stderr). If the output is redirected to
  a terminal, then the various levels of debug information are colored. Use
  *-L* (*--logfile*) to redirect the debug output to a file.

*-L* _filename_ | *--logfile* _filename_::
  Redirects the debugging output to the logfile specified with _filename_.

*-F* _filename_ | *--configfile* _filename_::
  Use a different configuration file instead of _/etc/sysconfig/kdump_.

IDENTIFYING A KERNEL
--------------------

When finding a kernel that is suitable for kdump on the system, it's necessary
to know if that is a relocatable kernel. Historically, on every platform except
Itanium (IA64) kdump used a special kernel compiled with another start address.
That kernel had always "kdump" in its name on SUSE systems. If such a kernel is
found, that kernel is preferred. However, if there is no such kernel, the kdump
init script (_/etc/init.d/kdump_) looks for normal kernels that are relocatable.

Syntax
~~~~~~

*kdumptool* [_globals_] *identify_kernel* [-r] [-t]

It's necessary to provide either -r, -t or both.

Options
~~~~~~~

*-r* | *--relocatable*::
  Checks if the kernel is relocatable. If it is, it prints the string
  _Relocatable_ on stdout and exits with error code _0_. If it's not
  relocatable, then it prints _Not relocatable_ and exits with _2_.

*-t* | *--type*::
  Prints the type of the kernel. There are following types: _x86_ for the
  bzImage format, _ELF_ for a normal ELF binary and _ELF gzip_ for gzipped
  ELF binary.


DUMP SAVING
-----------

This command is used to save the dump to the specified _KDUMP_DUMPDIR_
in the configuration file with _KDUMP_DUMPLEVEL_ in _KDUMP_DUMPFORMAT_.

When _KDUMP_DUMPFORMAT_ is not "ELF" and the _KDUMP_DUMPLEVEL_ is not 0, the
*makedumpfile* tool will be used to save the dump. For NFS and CIFS, kernel
support of mounting these shares is required. For NFS, the *showmount* tool
is required to check the exported file systems first.

This command also checks if the dump is too large to fit on disk
(see KDUMP_FREE_DISK_SIZE). If that is the case, the dump is deleted afterwards.
It's not possible to know the dump size in advance (if dump filtering and/or
dump compression is used).

After the dump has been saved, a notification email is sent via the SMTP server
specified as _KDUMP_SMTP_SERVER_ (with the authentication credentials specified
as _KDUMP_SMTP_USER_ and _KDUMP_SMTP_USER_) to the mail addresses specified in
_KDUMP_NOTIFICATION_TO_ and _KDUMP_NOTIFICATION_CC_. You can skip the mail part
with the _--nomail_ option. Also, if you don't specify an SMTP server or a
recipient, the mail part is silently skipped.

Syntax
~~~~~~

*kdumptool* [_globals_] *save_dump*
 [-u _dumpfile_] [-R _root_] [-k _ver_] [-q _fqdn_]

Options
~~~~~~~

*-u* _dumpfile_ | *--dump* _dumpfile_::
  Don't use _/proc/vmcore_ as dump file but _dumpfile_. This is mostly for
  debugging.

*-R* _root_ | *--root* _root_::
  Use _root_ instead of _/_ as root directory. That option is useful in
  initrd where the system root is not mounted to _/_ but needs to be mounted
  externally.

*-k* _version_ | *--kernelversion* _version_::
  Use _version_ as kernel version (which is necessary if the dump saving process
  also copies the kernel binary) instead of the auto-detected one via
  VMCOREINFO.

*-H* _hostname_ | *--hostname* _hostname_::
  Use _hostname_ as host name in the README.txt file (in the dump directory).
  This is because the initrd often lacks proper network configuration, and we
  want the hostname of the old system in that README.txt file, not the initrd
  hostname (which may be an DHCP auto-generated host name).

*-M* | *--nomail*::
  Don't send the notification email even if mail has been configured in the
  configuration file.

LED BLINKING
------------

To indicate that kdump initrd is booted, the keyboard LEDs should be blinking
because VGA may be broken when dumping from X. That subcommand is used to
achieve that.

The command can only be executed as root. Consider using the *-b*
(*--background*) option.

Syntax
~~~~~~

*kdumptool* [_globals_] *led_blink* [-i _interval_]

Options
~~~~~~~

*-i* _interval_ | *--interval* _interval_::
  Use _interval_ ms for the blink interval instead of the default 250 ms.


PRINTING VMCOREINFO
-------------------

In current kernel versions (starting from 2.6.25), the _/proc/vmcore_ has a new
PT_NOTE section called *VMCOREINFO*. This is a textual representation of
key/value pairs read from *makedumpfile* to get some parameters of the running
kernel in the crashed environment. This mechanism replaces the old *VMCOREINFO
file*.

Syntax
~~~~~~

*kdumptool* [_globals_] *read_vmcoreinfo* [-u _dumpfile_] [_key_]

When no _key_ is specified, this command just prints all key/value pairs in the
form _KEY=VALUE_. The order is random and has nothing to do with the order
the values appear in the PT_NOTE section.

Options
~~~~~~~

*-u* _dumpfile_ | *--dump* _dumpfile_::
  Don't use _/proc/vmcore_ as dump file but _dumpfile_. This is mostly for
  debugging.


DELETE OLD DUMPS
----------------

The *delete_dumps* subcommands deletes as many old dumps in *KDUMP_SAVEDIR*
as specified in *KDUMP_KEEP_OLD_DUMPS*.

Syntax
~~~~~~

*kdumptool* [_globals_] *delete_dumps* [-y] [-R _root_]

Options
~~~~~~~

*-y* | *--dry-run*::
  Don't delete anything, just print out what would be deleted.

*-R* _root_ | *--root* _root_::
  Use _root_ instead of _/_ as root directory. That option is useful in
  initrd where the system root is not mounted to _/_ but needs to be mounted
  externally.


PRINT DUMP TARGET
-----------------

For usage in scripts, the target URL can be printed and parsed by *kdumptool*.

Syntax
~~~~~~

*kdumptool* [_globals_] *print_target* [-R _root_]

Options
~~~~~~~

*-R* _root_ | *--root* _root_::
  Use _root_ instead of _/_ as root directory. That option is useful in
  initrd where the system root is not mounted to _/_ but needs to be mounted
  externally.

PRINT KERNEL CONFIGURATION
--------------------------

For kernels that have been compiled with _CONFIG_IKCONFIG_ (usually also
with _CONFIG_IKCONFIG_PROC_ to display the kernel configuration in the running
kernel in _/proc/config.gz_), that command dumps the embedded kernel
configuration from a kernel image to standard output.

All usual kernel image formats (ELF, compressed ELF, bzImage) are supported.

Syntax
~~~~~~

*kdumptool* [_globals_] *read_ikconfig* _kernelimage_

DUMP KDUMPTOOL CONFIGURATION
----------------------------

All configuration variables can be dumped to the standard output in a form
that can be process by a shell or that can be passed as kernel parameters.

Syntax
~~~~~~

*kdumptool* [_globals_] *dump_config* [-f _format_]

Options
~~~~~~~

*-f* _format_ | *--format* _format_::
  Use the specified output format. It must be one of:
    *shell*;;
      The output can be read as a shell script. (default)
    *kernel*;;
      The output can be passed as a kernel parameter.

*-u* _usage_ | *--usage* _usage_::
  Show only configuration variables that are used for a specific stage.
  It is possible to specify multiple stages delimited by commas.
  Recognized stages are:
    *mkinitrd*;;
      Variables which control how the kdump initrd is created, e.g. which
      driver modules must be included.
    *kexec*;;
      Variables which are needed when loading the secondary kernel with
      kexec. Note that fadump does not use these variables.
    *dump*;;
      Variables used in the secondary kernel when saving the dump.
    *all*;;
      Show all variables. (default)

MODIFY MULTIPATH CONFIGURATION
------------------------------

If multipath devices are used on a machine, then they should be also
configured in the dump kernel. However, each multipath device needs
some amount of RAM at run time, increasing the necessary size of the
crash reserved area. That way it is even possible to exceed the maximum
size of that area on machines with a very large number of multipath
devices, 

This subcommand reads an existing multipath configuration on standard
input, blacklists all devices except those specified on the command line,
and sends the modified configuration to standard output. This allows to
let the dump kernel initialize only multipath devices that are necessary
for saving the dump.

Syntax
~~~~~~

*kdumptool* [_globals_] *multipath* _device_[...]

_device_ is a multipath device specification (e.g. "wwid
360060e801531f800000131f80000a001"). See *multipath.conf(5)* for details.


RETURN VALUE
------------

*0*::
  Success.

*255*::
  Unknown Error.

*2*::
  Kernel has been identified but is not relocatable.

FILES
-----

_/etc/sysconfig/kdump_::
  Configuration file, see *kdump*(5).

BUGS
----
Please report bugs and enhancement requests at https://bugzilla.novell.com[].

COPYING
-------
Copyright (c) 2008 Bernhard Walle <bwalle@suse.de>. Free use of this software is
granted under the terms of the GNU General Public License (GPL), version 2 or
later.

SEE ALSO
--------
*kexec*(8), *kdump*(5), *makedumpfile*(8),
http://en.opensuse.org/Kdump[_http://en.opensuse.org/Kdump_]

// vim: set sw=4 ts=4 et tw=80 fdm=marker spelllang=en_gb spell: :collapseFolds=1:
